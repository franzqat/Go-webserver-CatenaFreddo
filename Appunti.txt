DOMANDE E COMMENTI
Ci sono cose hardcoded: 
	path dove R salva jpg
	la temperatura massima in R
	GO: path di esecuzione script per lanciare R
	Scala: url per la post
	Il tempo di ciclo del sensore

SCALA
Usiamo la gaussiana e dobbiamo cambiare la distribuzione usando un processo markoviano
Scala fa la post al server GO

eseguiamo il jar da linea di comando specificando l'id
Go esegue lo script di R da linea di comando specificando l'id



Optimal PATH:
Premesse: 
	Il server è attivo e in ascolto
	Il database MongoDB è attivo
	
1. Il sensore periodicamente invia il valore di temperatura [simulato], il timestamp e il proprio ID attraverso una chiamata POST al server GO
2. Il server riceve la POST e: 
	2.1. Inserisce i dati nel database MongoDB nella collezione corrispondente all'ID
	2.2. Crea, se non esistono, le cartelle e i files associati al sensore con quell'ID
	2.3. Esegue lo script di R associato all'ID
3. R elabora i dati e genera il jpg corrispondente e lo conserva nella cartella del server associata all'ID del sensore

Dal punto di vista dell'utente:
L'utente accede alla pagina localhost:8080 dove trova un elenco di links chiamate con l'ID del sensore.
I link portano ad una pagina contente l'immagine plottata.

	



DIPENDENZE

GO
https://github.com/mongodb/mongo-go-driver
github.com/julienschmidt/httprouter
R
https://jeroen.github.io/mongolite/
install.packages("mongolite")

http://r-statistics.co/ggplot2-Tutorial-With-R.html#1.%20The%20Setup
install.packages("ggplot2")
install.packages("ggfortify")
library(ggpmisc)
_______________________________________________

ServerGO:
gira su localhost:8080
accetta get su /view/
/edit/
/save/ post
_______________________________________________
TODO:

GO:
Scrivere contenuto index
Gestione allarmi
Pulizia e creazione interfaccia web

Store templates in tmpl/ and page data in data/ (refactor albero dei files)

SCALA:
Ottimizzare distribuzione con processo markoviano
R:

_______________________________________________

DONE:
Connettere mongo a go 
accoppaire post a query di mongo X
GO creazione pagine web per le immagini trovate e i rispettivi sensori X la creazione avviene durante la post

Root con link a tutti i sensori noti /frontpage
BONUS: jar di scala eseguibile
scala argomento con deviceid
R legge mongo
R salva immagine
R Disaccoppiare script
R Automatizzare running (sempre ad ogni post)
R 

MONGO
Migrato in locale
_______________________________________________

Compila GO
HOW TO RUN GO
cd webserver\mongo
go build
cd ..
cd .\server\ 
go install
server
_________________
SCALA:
BUILD
BUILD ARTIFACT
BUILD
______________________________

R: Lancia script R-Handler

url <- "mongodb+srv://utente:unict@progettoapl-zkgjt.mongodb.net/test?retryWrites=true"
dmd <- mongo("45588774", url = url)


library(mongolite)
dmd <- mongo("45588774", url = "mongodb+srv://utente:unict@progettoapl-zkgjt.mongodb.net/test?retryWrites=true")
alldata <- dmd$find('{}')
print(alldata)

library(ggplot2)
ggplot(alldata,aes(x=timestamp, y=temperatura))  + geom_point(aes(x=timestamp, y=temperatura, color=cut)) + geom_smooth()


library(ggfortify)
autoplot(alldata) + labs(title="Temperatura") 
library(ggpmisc)

ggplot(alldata) +   geom_line(aes(x=timestamp,y=temperatura)) +   labs(title="Chart")
alldata <- dmd$find('{}')
_______________________________________________

 .\Rscript.exe --vanilla C:\Users\franz\go\src\webserver\R-Handler.R 100